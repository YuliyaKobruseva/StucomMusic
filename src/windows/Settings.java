/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package windows;

import SwingTools.SwingTools;
import controller.Manager;
import exceptions.InputOutputException;
import exceptions.ManagerException;
import javax.swing.JOptionPane;
import model.user.User;

/**
 *
 * @author Yuli
 */
public class Settings extends javax.swing.JDialog {

    /**
     * Creates new form ModifyUser
     */
    public Settings(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        SwingTools.getSwingTools().setIcon(this, null);
        SwingTools.getSwingTools().generateSelect(userForPass, "user");
        userForPass.setSelectedIndex(-1);
        userForPass.setVisible(false);
        if (Manager.getManager().getCurrentUser().getTypeUser().toString().equalsIgnoreCase("ADMIN")) {
            labelChange.setText("Change your password o select user for modify");
            userForPass.setVisible(true);
        }
        requiredPass.setVisible(false);
        passNoMatch.setVisible(false);
        newPass.setText("");
        confirmPass.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelChange = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        newPass = new javax.swing.JPasswordField();
        confirmPass = new javax.swing.JPasswordField();
        modify = new javax.swing.JButton();
        userForPass = new javax.swing.JComboBox<>();
        requiredPass = new javax.swing.JLabel();
        passNoMatch = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Settings");

        labelChange.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelChange.setText("Change your password");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("New password");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Confirm new password");

        newPass.setText("jPasswordField2");

        confirmPass.setText("jPasswordField3");

        modify.setText("Modify");
        modify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyActionPerformed(evt);
            }
        });

        requiredPass.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        requiredPass.setForeground(new java.awt.Color(255, 0, 0));
        requiredPass.setText("New password is identical to the previous one");

        passNoMatch.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        passNoMatch.setForeground(new java.awt.Color(255, 0, 51));
        passNoMatch.setText("Password does not match");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(labelChange, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(passNoMatch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(requiredPass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(newPass, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                            .addComponent(confirmPass)
                            .addComponent(userForPass, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(276, 276, 276)
                        .addComponent(modify, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(164, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelChange, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userForPass, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newPass, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(requiredPass)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirmPass, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(passNoMatch)
                .addGap(18, 18, 18)
                .addComponent(modify, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
     * Call a method to modify password
     *
     * @param evt
     */
    private void modifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyActionPerformed
        try {
            String newPassword = String.valueOf(newPass.getPassword());
            String confirmPassword = String.valueOf(confirmPass.getPassword());
            User user;
            if (newPassword.trim().equalsIgnoreCase("") || newPassword.equalsIgnoreCase("")) {
                requiredPass.setText("Password is required");
                requiredPass.setVisible(true);
            } else {
                requiredPass.setVisible(false);
                if (userForPass.getSelectedIndex() != -1) {
                    user = Manager.getManager().checkExistUser(userForPass.getSelectedItem().toString());
                } else {
                    user = Manager.getManager().getCurrentUser();
                }
                if (Manager.getManager().checkPassword(user.getPassword(), newPassword)) {
                    requiredPass.setVisible(true);
                } else {
                    requiredPass.setVisible(false);
                    if (Manager.getManager().checkPassword(newPassword, confirmPassword)) {
                        Manager.getManager().updateUserPassword(newPassword, user);
                        userForPass.setSelectedIndex(-1);
                        newPass.setText("");
                        confirmPass.setText("");
                        JOptionPane.showMessageDialog(this, "" + "Password has been modified successful", "Message", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        passNoMatch.setVisible(true);
                    }
                }
            }
        } catch (ManagerException ex) {
            JOptionPane.showMessageDialog(this, "" + ex.getMessage(), "Message", JOptionPane.WARNING_MESSAGE);
        } catch (InputOutputException ex) {
            JOptionPane.showMessageDialog(this, "" + ex.getMessage(), "Message", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_modifyActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField confirmPass;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel labelChange;
    private javax.swing.JButton modify;
    private javax.swing.JPasswordField newPass;
    private javax.swing.JLabel passNoMatch;
    private javax.swing.JLabel requiredPass;
    private javax.swing.JComboBox<String> userForPass;
    // End of variables declaration//GEN-END:variables
}
